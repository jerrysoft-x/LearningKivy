#: import ListAdapter kivy.adapters.listadapter.ListAdapter
#: import ListItemButton kivy.uix.listview.ListItemButton
#: import main main

WeatherRoot:

<WeatherRoot>:
    carousel: carousel
    locations: locations
    current_weather: current_weather
    forecast: forecast
    BoxLayout:
        orientation: 'vertical'
        ActionBar:
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: 'Kivy Weather'
                    with_previous: False
                ActionOverflow:
                    ActionButton:
                        text: 'Add Location'
                        on_press: app.root.show_add_location_form()
                    ActionButton:
                        text: 'Settings'
                        on_press: app.open_settings()
                ActionButton:
                    text: 'Locations'
                    on_press: app.root.carousel.load_slide(app.root.locations)
                ActionButton:
                    text: 'Current'
                    on_press: app.root.carousel.load_slide(app.root.current_weather)
                ActionButton:
                    text: 'Forecast'
                    on_press: app.root.carousel.load_slide(app.root.forecast)
        Carousel:
            id: carousel
            Locations:
                id: locations
            CurrentWeather:
                id: current_weather
            Forecast:
                id: forecast

#    add_location_form: add_location_form

#    AddLocationForm:
#        id: add_location_form

<AddLocationForm>:
    search_input: search_box
    search_results: search_results_list

    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            size_hint_y: 5

            TextInput:
                id: search_box
                size_hint_x: 50
                focus: True
                multiline: False
                on_text_validate: root.search_location()
            Button:
                text: 'Search'
                size_hint_x: 25
                on_press: root.search_location()
            Button:
                text: 'Current Location'
                size_hint_x: 25
        ListView:
            id: search_results_list
            size_hint_y: 90
            item_strings: []
            adapter:
                ListAdapter(data=[], cls=main.LocationButton, args_converter=main.locations_args_converter)
        Button:
            size_hint_y: 5
            text: 'Cancel'
            on_press: root.dismiss()

#<CancelButton>:
#    height: '40dp'
#    size_hint_y: None
#    text: 'Cancel'
#    on_press: app.root.show_current_weather(None)

<LocationButton>:
    text: '{} ({})'.format(self.location[0], self.location[1])
    height: '40dp'
    size_hint_y: None
    on_press: app.root.show_current_weather(self.location)

<CurrentWeather>:
    orientation: 'vertical'
#    on_right_to_left_line: app.root.show_forecast(root.location)
#    on_top_to_bottom_line: root.update_weather()
    BoxLayout:
        Label:
            text: '{} ({})'.format(root.location[0], root.location[1])
            font_size: '30dp'
        Label:
            text: '{}'.format(root.temp)
    BoxLayout:
        Label:
            text: root.conditions
        AsyncImage:
            source: root.conditions_image
    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: 'Low: {}'.format(root.temp_min)
        Label:
            text: 'High: {}'.format(root.temp_max)
#    BoxLayout:
#        orientation: 'horizontal'
#        size_hint_y: None
#        height: '40dp'
#        Button:
#            text: "Locations"
#            on_press: app.root.show_locations()
#            on_press: app.root.carousel.load_slide(app.root.locations)
#        Button:
#            text: 'Forecast'
#            on_press: app.root.show_forecast(root.location)
#            on_press: app.root.carousel.load_slide(app.root.forecast)

<Locations@BoxLayout>:
    orientation: 'vertical'
    locations_list: locations_list
    ListView:
        id: locations_list
        adapter:
            ListAdapter(
            data=[],
            cls=main.LocationButton,
            args_converter=main.locations_args_converter)
#    BoxLayout:
#        orientation: 'horizontal'
#        size_hint_y: None
#        height: '40dp'
#        Button:
#            text: 'Add Location'
#            on_press: app.root.show_add_location_form()
#        Button:
#            text: 'Settings'
#            on_press: app.open_settings()

<ForecastLabel@BoxLayout>:
    date: ''
    conditions_image: ''
    conditions: ''
    temp_min: None
    temp_max: None
    canvas.before:
        Color:
            rgb: [0.2, 0.2, 0.2]
        Line:
            points: [self.pos[0], self.pos[1], self.width, self.pos[1]]
    Label:
        text: root.date
    BoxLayout:
        orientation: 'vertical'
        AsyncImage:
            source: root.conditions_image
        Label:
            text: root.conditions
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Low: {}'.format(root.temp_min)
        Label:
            text: 'High: {}'.format(root.temp_max)

<Forecast>:
    forecast_container: forecast_container
    orientation: 'vertical'
#    on_left_to_right_line: app.root.show_current_weather(root.location)
#    on_top_to_bottom_line: root.update_weather()
    Label:
        size_hint_y: 0.1
        font_size: '30dp'
        text: '{} ({})'.format(root.location[0], root.location[1])
    BoxLayout:
        orientation: 'vertical'
        id: forecast_container
#    BoxLayout:
#        orientation: 'horizontal'
#        size_hint_y: None
#        height: '40dp'
#        Button:
#            text: 'Current'
#            on_press: app.root.show_current_weather(root.location)